import numpy

def norm(R):
	for i in xrange(len(R)):
		for j in xrange(len(R[i])):
			if R[i][j] > 0:
				R[i][j] = (R[i][j] - 1.0)/4.0
	return R

def bound(x):
	return 1/(1 + numpy.exp(-x))

def dbound(x):
	y = numpy.exp(x)
	return y/pow((1 + y),2)

def matrix_factorize(R, C, U, V, Z, K, steps=10000, alpha=0.0002, beta=0.02, gamma = 15):
	V = V.T
	Z = Z.T
	for step in xrange(steps):
		for i in xrange(len(R)):
			for j in xrange(len(R[i])):
				if R[i][j] > 0:
					y = numpy.dot(U[i,:], V[:,j])
					a = bound(y)
					b = dbound(y)
					eij = b*(R[i][j] - a)
					for k in xrange(K):
						U[i][k] = U[i][k] + alpha * (2 * eij * V[k][j] - beta * U[i][k])
						V[k][j] = V[k][j] + alpha * (2 * eij * U[i][k] - beta * V[k][j])
			for j in xrange(len(C[i])):
				if C[i][j] > 0:
					y = numpy.dot(U[i,:], Z[:,j])
					a = bound(y)
					b = dbound(y)
					eij = gamma*b*(C[i][j] - a)
					for k in xrange(K):
						U[i][k] = U[i][k] + alpha * (2 * eij * Z[k][j] - beta * U[i][k])
						Z[k][j] = Z[k][j] + alpha * (2 * eij * U[i][k] - beta * Z[k][j])
		e = 0
		for i in xrange(len(R)):
			for j in xrange(len(R[i])):
				if R[i][j] > 0:
					y = numpy.dot(U[i,:], V[:,j])
					a = bound(y)
					e = e + pow(R[i][j] - a, 2)
					for k in xrange(K):
						e = e + (beta/2) * (pow(U[i][k],2) + pow(V[k][j],2))
		for i in xrange(len(C)):
			for j in xrange(len(C[i])):
				if C[i][j] > 0:
					y = numpy.dot(U[i,:], Z[:,j])
					a = bound(y)
					e = e + (gamma/2)*pow(C[i][j] - a, 2)
					for k in xrange(K):
						e = e + (beta/2) * (pow(U[i][k],2) + pow(Z[k][j],2))
		if e < 0.001:
			break
		else:
			print e
	return U, V.T , Z.T


R = [
	 [5.0,2,0,3,0,4,0,0],
	 [4,3,0,0,5,0,0,0],
	 [4,0,2,0,0,0,2,4],
	 [0,0,0,0,0,0,0,0],
	 [5,1,2,0,4,3,0,0],
	 [4,3,0,2,4,0,3,5],
	]

C = [
	 [0,0,0,0,0,0],
	 [0,0,0,1,0,0],
	 [0.8,0,0,0,0,0],
	 [0.8,1,0,0,0.6,0],
	 [0,0,0.4,0,0,0.8],
	 [0,0,0,0,0,0],
	]

R = numpy.array(R)
R = norm(R)
C = numpy.array(C)

N = len(R)
M = len(R[0])

K = 5

U = numpy.random.rand(N,K)
V = numpy.random.rand(M,K)
Z = numpy.random.rand(N,K)

nU, nV, nZ = matrix_factorize(R, C, U, V, Z, K)
print nU, "\n", nV
nR = numpy.dot(nU,nV.T)
print nR, "\n", R
nC = numpy.dot(nU,nZ.T)
print nC, "\n", C